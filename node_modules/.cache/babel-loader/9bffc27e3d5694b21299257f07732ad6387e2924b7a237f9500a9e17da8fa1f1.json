{"ast":null,"code":"var _jsxFileName = \"/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = ({\n  updatePlaylist\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n    try {\n      const results = await searchTracks(searchTerm);\n      setTracks(results);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n      alert(\"Failed to fetch search results. Please try again.\");\n    }\n  };\n  const handleAddTrack = async track => {\n    try {\n      const trackToAdd = {\n        id: track.id,\n        name: track.name,\n        artist: track.artist,\n        album: track.album,\n        image: track.image,\n        releaseDate: track.releaseDate,\n        // 추가\n        duration: track.duration,\n        // 추가\n        previewUrl: track.previewUrl // 필드 이름 통일\n      };\n\n      // MockAPI로 데이터 전송\n      const addedTrack = await addTrackToPlaylist(trackToAdd);\n\n      // Playlist 업데이트\n      updatePlaylist(prevPlaylist => [...prevPlaylist, addedTrack]);\n      alert(`Track \"${addedTrack.name}\" by ${addedTrack.artist} added to the playlist!`);\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track to the playlist.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a track or artist name...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      tracks: tracks,\n      onAdd: handleAddTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"hLT5UG8HRZheL8IGUxWmmmBm1yk=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","searchTracks","addTrackToPlaylist","SearchResults","jsxDEV","_jsxDEV","SearchPage","updatePlaylist","_s","searchTerm","setSearchTerm","tracks","setTracks","handleSearch","trim","alert","results","error","console","handleAddTrack","track","trackToAdd","id","name","artist","album","image","releaseDate","duration","previewUrl","addedTrack","prevPlaylist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onAdd","_c","$RefreshReg$"],"sources":["/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = ({ updatePlaylist }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n\n    try {\n      const results = await searchTracks(searchTerm);\n      setTracks(results);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n      alert(\"Failed to fetch search results. Please try again.\");\n    }\n  };\n\n  const handleAddTrack = async (track) => {\n    try {\n      const trackToAdd = {\n        id: track.id,\n        name: track.name,\n        artist: track.artist,\n        album: track.album,\n        image: track.image,\n        releaseDate: track.releaseDate, // 추가\n        duration: track.duration, // 추가\n        previewUrl: track.previewUrl, // 필드 이름 통일\n      };\n  \n      // MockAPI로 데이터 전송\n      const addedTrack = await addTrackToPlaylist(trackToAdd);\n  \n      // Playlist 업데이트\n      updatePlaylist((prevPlaylist) => [...prevPlaylist, addedTrack]);\n  \n      alert(`Track \"${addedTrack.name}\" by ${addedTrack.artist} added to the playlist!`);\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track to the playlist.\");\n    }\n  };\n  \n\n  return (\n    <div className=\"search-page\">\n      <h1>Search Tracks</h1>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a track or artist name...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <SearchResults tracks={tracks} onAdd={handleAddTrack} />\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}