{"ast":null,"code":"var _jsxFileName = \"/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/ReadPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { getPlaylist } from \"../services/PlaylistService\"; // API로부터 데이터를 가져오는 함수\nimport \"./ReadPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReadPage = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTracks, setCurrentTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentPlayingTrack, setCurrentPlayingTrack] = useState(null);\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      const data = await getPlaylist(); // Mock API에서 데이터 가져오기\n      setPlaylist(data);\n      setCurrentTracks(data.slice(0, 3)); // 초기 디스크 3개만 표시\n    };\n    fetchPlaylist();\n  }, []);\n  const handleNext = () => {\n    const nextIndex = (currentTrackIndex + 1) % Math.ceil(playlist.length / 3);\n    const start = nextIndex * 3;\n    const end = start + 3;\n    setCurrentTracks(playlist.slice(start, end));\n    setCurrentTrackIndex(nextIndex);\n  };\n  const handlePrevious = () => {\n    const prevIndex = (currentTrackIndex - 1 + Math.ceil(playlist.length / 3)) % Math.ceil(playlist.length / 3);\n    const start = prevIndex * 3;\n    const end = start + 3;\n    setCurrentTracks(playlist.slice(start, end));\n    setCurrentTrackIndex(prevIndex);\n  };\n  const handlePlay = track => {\n    setCurrentPlayingTrack(track);\n    const audioPlayer = document.getElementById(\"audio-player\");\n    const audioSource = document.getElementById(\"audio-source\");\n    if (track !== null && track !== void 0 && track.audioUrl) {\n      audioSource.src = track.audioUrl;\n      audioPlayer.load();\n      audioPlayer.play();\n    } else {\n      alert(\"No audio available for this track.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"read-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/img/logo.png\",\n        alt: \"Logo\",\n        className: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-art-container\",\n      children: currentTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"disk\",\n        onClick: () => handlePlay(track),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"lp-image\",\n          src: \"/img/IMG_lp.PNG\",\n          alt: \"Vinyl\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"album-image\",\n          src: track.image,\n          alt: track.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"track-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          id: \"title\",\n          children: (currentPlayingTrack === null || currentPlayingTrack === void 0 ? void 0 : currentPlayingTrack.name) || \"No Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          id: \"artist\",\n          children: (currentPlayingTrack === null || currentPlayingTrack === void 0 ? void 0 : currentPlayingTrack.artist) || \"No Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"time-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"current-time\",\n          children: \"0:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"progress-bar\",\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          defaultValue: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          id: \"total-time\",\n          children: \"0:00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"prev-btn\",\n          className: \"control-btn\",\n          onClick: handlePrevious,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/pre_btn.png\",\n            alt: \"Previous\",\n            className: \"control-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"play-pause-btn\",\n          className: \"control-btn\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/play_btn.png\",\n            alt: \"Play\",\n            className: \"control-icon\",\n            id: \"play-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"next-btn\",\n          className: \"control-btn\",\n          onClick: handleNext,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"/img/next_btn.png\",\n            alt: \"Next\",\n            className: \"control-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audio-player\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        id: \"audio-source\",\n        src: \"\",\n        type: \"audio/mpeg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), \"Your browser does not support the audio element.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ReadPage, \"V0NpZpNwhaqttA6W76aL3pU12yU=\");\n_c = ReadPage;\nexport default ReadPage;\nvar _c;\n$RefreshReg$(_c, \"ReadPage\");","map":{"version":3,"names":["React","useState","useEffect","getPlaylist","jsxDEV","_jsxDEV","ReadPage","_s","playlist","setPlaylist","currentTracks","setCurrentTracks","currentTrackIndex","setCurrentTrackIndex","currentPlayingTrack","setCurrentPlayingTrack","fetchPlaylist","data","slice","handleNext","nextIndex","Math","ceil","length","start","end","handlePrevious","prevIndex","handlePlay","track","audioPlayer","document","getElementById","audioSource","audioUrl","src","load","play","alert","className","children","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","image","name","id","artist","type","min","max","defaultValue","_c","$RefreshReg$"],"sources":["/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/ReadPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { getPlaylist } from \"../services/PlaylistService\"; // API로부터 데이터를 가져오는 함수\nimport \"./ReadPage.css\";\n\nconst ReadPage = () => {\n  const [playlist, setPlaylist] = useState([]);\n  const [currentTracks, setCurrentTracks] = useState([]);\n  const [currentTrackIndex, setCurrentTrackIndex] = useState(0);\n  const [currentPlayingTrack, setCurrentPlayingTrack] = useState(null);\n\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      const data = await getPlaylist(); // Mock API에서 데이터 가져오기\n      setPlaylist(data);\n      setCurrentTracks(data.slice(0, 3)); // 초기 디스크 3개만 표시\n    };\n    fetchPlaylist();\n  }, []);\n\n  const handleNext = () => {\n    const nextIndex = (currentTrackIndex + 1) % Math.ceil(playlist.length / 3);\n    const start = nextIndex * 3;\n    const end = start + 3;\n    setCurrentTracks(playlist.slice(start, end));\n    setCurrentTrackIndex(nextIndex);\n  };\n\n  const handlePrevious = () => {\n    const prevIndex =\n      (currentTrackIndex - 1 + Math.ceil(playlist.length / 3)) %\n      Math.ceil(playlist.length / 3);\n    const start = prevIndex * 3;\n    const end = start + 3;\n    setCurrentTracks(playlist.slice(start, end));\n    setCurrentTrackIndex(prevIndex);\n  };\n\n  const handlePlay = (track) => {\n    setCurrentPlayingTrack(track);\n    const audioPlayer = document.getElementById(\"audio-player\");\n    const audioSource = document.getElementById(\"audio-source\");\n    if (track?.audioUrl) {\n      audioSource.src = track.audioUrl;\n      audioPlayer.load();\n      audioPlayer.play();\n    } else {\n      alert(\"No audio available for this track.\");\n    }\n  };\n\n  return (\n    <div className=\"read-page\">\n      {/* 로고 */}\n      <header className=\"header\">\n        <img src=\"/img/logo.png\" alt=\"Logo\" className=\"logo\" />\n      </header>\n\n      {/* 디스크 UI */}\n      <div className=\"album-art-container\">\n        {currentTracks.map((track, index) => (\n          <div\n            key={index}\n            className=\"disk\"\n            onClick={() => handlePlay(track)}\n          >\n            <img className=\"lp-image\" src=\"/img/IMG_lp.PNG\" alt=\"Vinyl\" />\n            <img\n              className=\"album-image\"\n              src={track.image}\n              alt={track.name}\n            />\n          </div>\n        ))}\n      </div>\n\n      {/* 플레이어 UI */}\n      <div className=\"player-container\">\n        <div className=\"track-info\">\n          <h1 id=\"title\">{currentPlayingTrack?.name || \"No Title\"}</h1>\n          <p id=\"artist\">{currentPlayingTrack?.artist || \"No Artist\"}</p>\n        </div>\n        <div className=\"time-info\">\n          <span id=\"current-time\">0:00</span>\n          <input id=\"progress-bar\" type=\"range\" min=\"0\" max=\"100\" defaultValue=\"0\" />\n          <span id=\"total-time\">0:00</span>\n        </div>\n        <div className=\"controls\">\n          <button id=\"prev-btn\" className=\"control-btn\" onClick={handlePrevious}>\n            <img src=\"/img/pre_btn.png\" alt=\"Previous\" className=\"control-icon\" />\n          </button>\n          <button id=\"play-pause-btn\" className=\"control-btn\">\n            <img\n              src=\"/img/play_btn.png\"\n              alt=\"Play\"\n              className=\"control-icon\"\n              id=\"play-icon\"\n            />\n          </button>\n          <button id=\"next-btn\" className=\"control-btn\" onClick={handleNext}>\n            <img src=\"/img/next_btn.png\" alt=\"Next\" className=\"control-icon\" />\n          </button>\n        </div>\n      </div>\n\n      {/* 오디오 플레이어 */}\n      <audio id=\"audio-player\">\n        <source id=\"audio-source\" src=\"\" type=\"audio/mpeg\" />\n        Your browser does not support the audio element.\n      </audio>\n    </div>\n  );\n};\n\nexport default ReadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}