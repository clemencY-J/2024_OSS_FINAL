{"ast":null,"code":"var _jsxFileName = \"/Users/leeyunji/Desktop/24-2/FFFinal/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SearchPage from \"./components/SearchPage\";\nimport ReadPage from \"./components/ReadPage\";\nimport EditPage from \"./components/EditPage\";\nimport Sidebar from \"./components/SideBar\";\nimport { getPlaylist } from \"./services/PlaylistService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [playlist, setPlaylist] = useState([]); // 플레이리스트 상태 관리\n\n  // 컴포넌트가 마운트될 때 플레이리스트 데이터를 가져옴\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const data = await getPlaylist(); // 서버 또는 로컬에서 플레이리스트 데이터를 가져옴\n        setPlaylist(data);\n      } catch (error) {\n        console.error(\"Error fetching playlist:\", error);\n      }\n    };\n    fetchPlaylist();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        playlist: playlist,\n        updatePlaylist: setPlaylist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main-content\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(SearchPage, {\n              playlist: playlist,\n              updateSidebar: setPlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/read\",\n            element: /*#__PURE__*/_jsxDEV(ReadPage, {\n              playlist: playlist,\n              updateSidebar: setPlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/edit\",\n            element: /*#__PURE__*/_jsxDEV(EditPage, {\n              playlist: playlist,\n              updateSidebar: setPlaylist\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 24\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"SfGHzpmtpLKztV2lxKmaYynPFKI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","SearchPage","ReadPage","EditPage","Sidebar","getPlaylist","jsxDEV","_jsxDEV","App","_s","playlist","setPlaylist","fetchPlaylist","data","error","console","children","className","updatePlaylist","fileName","_jsxFileName","lineNumber","columnNumber","path","element","updateSidebar","_c","$RefreshReg$"],"sources":["/Users/leeyunji/Desktop/24-2/FFFinal/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport SearchPage from \"./components/SearchPage\";\nimport ReadPage from \"./components/ReadPage\";\nimport EditPage from \"./components/EditPage\";\nimport Sidebar from \"./components/SideBar\";\nimport { getPlaylist } from \"./services/PlaylistService\";\n\nconst App = () => {\n  const [playlist, setPlaylist] = useState([]); // 플레이리스트 상태 관리\n\n  // 컴포넌트가 마운트될 때 플레이리스트 데이터를 가져옴\n  useEffect(() => {\n    const fetchPlaylist = async () => {\n      try {\n        const data = await getPlaylist(); // 서버 또는 로컬에서 플레이리스트 데이터를 가져옴\n        setPlaylist(data);\n      } catch (error) {\n        console.error(\"Error fetching playlist:\", error);\n      }\n    };\n    fetchPlaylist();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app\">\n        {/* 사이드바: playlist 데이터 및 업데이트 함수를 전달 */}\n        <Sidebar playlist={playlist} updatePlaylist={setPlaylist} />\n        <div className=\"main-content\">\n          {/* 라우트 설정: 각 페이지에 updateSidebar와 playlist 상태를 전달 */}\n          <Routes>\n            <Route \n              path=\"/\" \n              element={<SearchPage playlist={playlist} updateSidebar={setPlaylist} />} \n            />\n            <Route \n              path=\"/read\" \n              element={<ReadPage playlist={playlist} updateSidebar={setPlaylist} />} \n            />\n            <Route \n              path=\"/edit\" \n              element={<EditPage playlist={playlist} updateSidebar={setPlaylist} />} \n            />\n          </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}