{"ast":null,"code":"var _jsxFileName = \"/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = ({\n  updatePlaylist\n}) => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n    try {\n      const results = await searchTracks(searchTerm);\n      setTracks(results);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n      alert(\"Failed to fetch search results. Please try again.\");\n    }\n  };\n  const handleAddTrack = async track => {\n    try {\n      var _track$artists$, _track$album$images$;\n      const addedTrack = await addTrackToPlaylist({\n        name: track.name,\n        artist: (_track$artists$ = track.artists[0]) === null || _track$artists$ === void 0 ? void 0 : _track$artists$.name,\n        image: (_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n        audioUrl: track.preview_url\n      });\n      alert(`Track \"${addedTrack.name}\" by ${addedTrack.artist} added to the playlist!`);\n      updatePlaylist(prev => [...prev, addedTrack]); // 사이드바 실시간 업데이트\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track to the playlist.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Search Tracks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search-bar\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter a track or artist name...\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      tracks: tracks,\n      onAdd: handleAddTrack\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"hLT5UG8HRZheL8IGUxWmmmBm1yk=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","searchTracks","addTrackToPlaylist","SearchResults","jsxDEV","_jsxDEV","SearchPage","updatePlaylist","_s","searchTerm","setSearchTerm","tracks","setTracks","handleSearch","trim","alert","results","error","console","handleAddTrack","track","_track$artists$","_track$album$images$","addedTrack","name","artist","artists","image","album","images","url","audioUrl","preview_url","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","onAdd","_c","$RefreshReg$"],"sources":["/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = ({ updatePlaylist }) => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [tracks, setTracks] = useState([]);\n\n  const handleSearch = async () => {\n    if (!searchTerm.trim()) {\n      alert(\"Please enter a search term.\");\n      return;\n    }\n\n    try {\n      const results = await searchTracks(searchTerm);\n      setTracks(results);\n    } catch (error) {\n      console.error(\"Error fetching search results:\", error);\n      alert(\"Failed to fetch search results. Please try again.\");\n    }\n  };\n\n  const handleAddTrack = async (track) => {\n    try {\n      const addedTrack = await addTrackToPlaylist({\n        name: track.name,\n        artist: track.artists[0]?.name,\n        image: track.album.images[0]?.url,\n        audioUrl: track.preview_url,\n      });\n\n      alert(`Track \"${addedTrack.name}\" by ${addedTrack.artist} added to the playlist!`);\n      updatePlaylist((prev) => [...prev, addedTrack]); // 사이드바 실시간 업데이트\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track to the playlist.\");\n    }\n  };\n\n  return (\n    <div className=\"search-page\">\n      <h1>Search Tracks</h1>\n      <div className=\"search-bar\">\n        <input\n          type=\"text\"\n          placeholder=\"Enter a track or artist name...\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <button onClick={handleSearch}>Search</button>\n      </div>\n      <SearchResults tracks={tracks} onAdd={handleAddTrack} />\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}