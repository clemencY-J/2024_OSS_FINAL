{"ast":null,"code":"var _jsxFileName = \"/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist, getPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = ({\n  updateSidebar\n}) => {\n  _s();\n  const [tracks, setTracks] = useState([]);\n\n  // 곡 검색 핸들러\n  const handleSearch = async query => {\n    try {\n      const results = await searchTracks(query);\n      setTracks(results || []);\n    } catch (error) {\n      console.error(\"Error searching tracks:\", error);\n      alert(\"Failed to search tracks.\");\n    }\n  };\n\n  // 곡 추가 핸들러\n  const handleAdd = async track => {\n    try {\n      var _track$artists$, _track$album$images$;\n      // 곡 추가\n      await addTrackToPlaylist({\n        id: track.id,\n        name: track.name,\n        artist: (_track$artists$ = track.artists[0]) === null || _track$artists$ === void 0 ? void 0 : _track$artists$.name,\n        image: (_track$album$images$ = track.album.images[0]) === null || _track$album$images$ === void 0 ? void 0 : _track$album$images$.url,\n        audioUrl: track.preview_url // 추가된 필드: 음원 URL\n      });\n\n      // 추가 후 업데이트된 플레이리스트 가져오기\n      const updatedPlaylist = await getPlaylist();\n      updateSidebar(updatedPlaylist); // 사이드바 동기화\n      alert(`${track.name} added to playlist!`);\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search for a song...\",\n      onKeyDown: e => e.key === \"Enter\" && handleSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      tracks: tracks,\n      onAdd: handleAdd\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchPage, \"L1pLig/GVCA9Hd5Koxqlpeo2zIY=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","searchTracks","addTrackToPlaylist","getPlaylist","SearchResults","jsxDEV","_jsxDEV","SearchPage","updateSidebar","_s","tracks","setTracks","handleSearch","query","results","error","console","alert","handleAdd","track","_track$artists$","_track$album$images$","id","name","artist","artists","image","album","images","url","audioUrl","preview_url","updatedPlaylist","className","children","type","placeholder","onKeyDown","e","key","target","value","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","_c","$RefreshReg$"],"sources":["/Users/leeyunji/Desktop/24-2/FFFinal_github/src/components/SearchPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { searchTracks } from \"../services/SpotifyService\";\nimport { addTrackToPlaylist, getPlaylist } from \"../services/PlaylistService\";\nimport SearchResults from \"./SearchResults\";\nimport \"./SearchPage.css\";\n\nconst SearchPage = ({ updateSidebar }) => {\n  const [tracks, setTracks] = useState([]);\n\n  // 곡 검색 핸들러\n  const handleSearch = async (query) => {\n    try {\n      const results = await searchTracks(query);\n      setTracks(results || []);\n    } catch (error) {\n      console.error(\"Error searching tracks:\", error);\n      alert(\"Failed to search tracks.\");\n    }\n  };\n\n  // 곡 추가 핸들러\n  const handleAdd = async (track) => {\n    try {\n      // 곡 추가\n      await addTrackToPlaylist({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0]?.name,\n        image: track.album.images[0]?.url,\n        audioUrl: track.preview_url, // 추가된 필드: 음원 URL\n      });\n\n      // 추가 후 업데이트된 플레이리스트 가져오기\n      const updatedPlaylist = await getPlaylist();\n      updateSidebar(updatedPlaylist); // 사이드바 동기화\n      alert(`${track.name} added to playlist!`);\n    } catch (error) {\n      console.error(\"Error adding track:\", error);\n      alert(\"Failed to add track.\");\n    }\n  };\n\n  return (\n    <div className=\"search-page\">\n      <input\n        type=\"text\"\n        placeholder=\"Search for a song...\"\n        onKeyDown={(e) => e.key === \"Enter\" && handleSearch(e.target.value)}\n      />\n      <SearchResults tracks={tracks} onAdd={handleAdd} />\n    </div>\n  );\n};\n\nexport default SearchPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,YAAY,QAAQ,4BAA4B;AACzD,SAASC,kBAAkB,EAAEC,WAAW,QAAQ,6BAA6B;AAC7E,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAc,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAExC;EACA,MAAMY,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,IAAI;MACF,MAAMC,OAAO,GAAG,MAAMb,YAAY,CAACY,KAAK,CAAC;MACzCF,SAAS,CAACG,OAAO,IAAI,EAAE,CAAC;IAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/CE,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC;;EAED;EACA,MAAMC,SAAS,GAAG,MAAOC,KAAK,IAAK;IACjC,IAAI;MAAA,IAAAC,eAAA,EAAAC,oBAAA;MACF;MACA,MAAMnB,kBAAkB,CAAC;QACvBoB,EAAE,EAAEH,KAAK,CAACG,EAAE;QACZC,IAAI,EAAEJ,KAAK,CAACI,IAAI;QAChBC,MAAM,GAAAJ,eAAA,GAAED,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC,cAAAL,eAAA,uBAAhBA,eAAA,CAAkBG,IAAI;QAC9BG,KAAK,GAAAL,oBAAA,GAAEF,KAAK,CAACQ,KAAK,CAACC,MAAM,CAAC,CAAC,CAAC,cAAAP,oBAAA,uBAArBA,oBAAA,CAAuBQ,GAAG;QACjCC,QAAQ,EAAEX,KAAK,CAACY,WAAW,CAAE;MAC/B,CAAC,CAAC;;MAEF;MACA,MAAMC,eAAe,GAAG,MAAM7B,WAAW,CAAC,CAAC;MAC3CK,aAAa,CAACwB,eAAe,CAAC,CAAC,CAAC;MAChCf,KAAK,CAAC,GAAGE,KAAK,CAACI,IAAI,qBAAqB,CAAC;IAC3C,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3CE,KAAK,CAAC,sBAAsB,CAAC;IAC/B;EACF,CAAC;EAED,oBACEX,OAAA;IAAK2B,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B5B,OAAA;MACE6B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,sBAAsB;MAClCC,SAAS,EAAGC,CAAC,IAAKA,CAAC,CAACC,GAAG,KAAK,OAAO,IAAI3B,YAAY,CAAC0B,CAAC,CAACE,MAAM,CAACC,KAAK;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrE,CAAC,eACFvC,OAAA,CAACF,aAAa;MAACM,MAAM,EAAEA,MAAO;MAACoC,KAAK,EAAE5B;IAAU;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC;AAEV,CAAC;AAACpC,EAAA,CA9CIF,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AAgDhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}